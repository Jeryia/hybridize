#!/bin/bash

#All rights reserved.
#
#Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
#
#1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
#
#2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
#
#3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# StarMadeâ„¢ is a registered trademark of Schine GmbH (All Rights Reserved)*
# The makers of stard make no claim of ownership or relationship with the owners of StarMade

BINDIR="/usr/bin"
PREFIX=""
LOCALSTATEDIR="/var"
LOCALPROGDIR="/usr/"
PERLLIBDIR="/usr/local/share/perl5"

SYSCONFDIR="/etc/sysconfig"


if [ -d $SYSCONFDIR ]; then
	SYSCONFDIR="/etc/sysconfig"
else 
	SYSCONFDIR="/etc/default"
fi




while [[ $# > 0 ]]; do
	arg="$1"

	case $arg in
		--sbindir)
			SBINDIR="$2"
			shift # past argument
			shift # past argument
		;;
		--prefix)
			PREFIX="$2"
			shift # past argument
			shift # past argument
		;;
		--sysconfdir)
			SYSCONFDIR=$2
			shift # past argument
			shift # past argument
		;;
		--localstatedir)
			LOCALSTATEDIR=$2
			shift # past argument
			shift # past argument
		;;
		--perllibdir)
			PERLLIBDIR=$2
			shift # past argument
			shift # past argument
		;;
		--help)
			echo "./configure [options]"
			echo
			echo "OPTIONS:"
			echo "  --prefix <dir> :Give a location to prefix all installs (everything but the init scripts will end up in thie directory (default /)"
			echo
			echo "  --sbindir <dir> :Give the loction to install privileged commands (default /usr/sbin)"
			echo "  --sysconfdir <dir> :Give the loction of the the system configuration directory (default $SYSCONFDIR)"
			echo "  --localstatedir <dir> :Give the loction of the the system state directory (default /var)"
			echo "  --starmadedir <dir> :Give the loction of the installation in the localstatedir (default starmade)"
			echo "  --starmadedir <dir> :Give the loction of the installation in the localstatedir (default starmade)"
			echo
			echo "  --with-initv  :Compile with initv scripts"
			echo "  --without-initv  :Compile without initv scripts"
			echo "  --standalone  :Compile standalone version. (WARNING EXPERIMENTAL)"
			echo "  --user  :User that the daemons will run as. (This user will be created in the make install step)"
			exit 0
		;;
		*)
			echo "Error. unknown option given $1."
			echo "see --help for a full list of options"
			exit 1
		;;
	esac
	#shift # past argument or value
done




echo "Checking Dependancies"
echo -n "bash... "
command -v bash > /dev/null 2>&1 
RET=$?
if [ $RET -eq 0 ]; then
	echo "ok"
	BASH=$(command -v bash)
else
	echo "not ok"
	echo "FAILED to locate bash installation... aborting."
	echo "see --help for more information"
	exit 1
fi

echo -n "perl... "
command -v perl > /dev/null 2>&1
RET=$?
if [ $RET -eq 0 ]; then
	echo "ok"
	PERL=$(command -v perl)
else
	echo "not ok"
	echo "FAILED to locate perl installation... aborting."
	echo "If perl is installed, it is not in your current"
	echo "path, you can specify a specific path to the perl"
	echo "binary with the --perl option"
	echo "see --help for more information"
	exit 1
fi

echo -n "perl-strict... "
$PERL -e "use strict" 
RET=$?
if [ $RET -eq 0 ]; then
	echo "ok"
else
	echo "not ok"
	echo "FAILED to locate perl module strict... aborting."
	echo "Look into installing this package from your distro's repositories"
	exit 1
fi

echo -n "perl-warnings... "
$PERL -e "use warnings" 
RET=$?
if [ $RET -eq 0 ]; then
	echo "ok"
else
	echo "not ok"
	echo "FAILED to locate perl module warnings... aborting."
	echo "Look into installing this package from your distro's repositories"
	exit 1
fi

echo -n "perl-File::Copy... "
$PERL -e "use File::Copy" 
RET=$?
if [ $RET -eq 0 ]; then
	echo "ok"
else
	echo "not ok"
	echo "FAILED to locate perl module File::Copy... aborting."
	echo "Look into installing this package from your distro's repositories"
	exit 1
fi

echo -n "perl-File::Basename... "
$PERL -e "use File::Basename" 
RET=$?
if [ $RET -eq 0 ]; then
	echo "ok"
else
	echo "not ok"
	echo "FAILED to locate perl module File::Basename... aborting."
	echo "Look into installing this package from your distro's repositories"
	exit 1
fi

echo -n "perl-Getopt::Long... "
$PERL -e "use Getopt::Long" 
RET=$?
if [ $RET -eq 0 ]; then
	echo "ok"
else
	echo "not ok"
	echo "FAILED to locate perl module Getopt::Long... aborting."
	echo "Look into installing this package from your distro's repositories"
	exit 1
fi

echo -n "perl-File::Path... "
$PERL -e "use File::Path" 
RET=$?
if [ $RET -eq 0 ]; then
	echo "ok"
else
	echo "not ok"
	echo "FAILED to locate perl module File::Path... aborting."
	echo "Look into installing this package from your distro's repositories"
	exit 1
fi

echo -n "sed... "
command -v sed > /dev/null 2>&1
RET=$?
if [ $RET -eq 0 ]; then
	echo "ok"
else
	echo "not ok"
	echo "FAILED to locate sed installation... aborting."
	echo "Look into installing this package from your distro's repositories"
	exit 1
fi

echo -n "rsync... "
command -v rsync > /dev/null 2>&1
RET=$?
if [ $RET -eq 0 ]; then
	echo "ok"
else
	echo "not ok"
	echo "FAILED to locate rsync installation... aborting."
	echo "Look into installing this package from your distro's repositories"
	exit 1
fi


function subs_strings {
	
	echo "	sed -i \"s,%BASH%,\$(BASH),g\" $1" >> ./Makefile
	echo "	sed -i \"s,%PERL%,\$(PERL),g\" $1" >> ./Makefile
	echo "	sed -i \"s,%PYTHON%,\$(PYTHON),g\" $1" >> ./Makefile
	echo "	sed -i \"s,%JAVA%,\$(JAVA),g\" $1" >> ./Makefile

	echo "	sed -i \"s,%SBINDIR%,\$(SBINDIR),g\" $1" >> ./Makefile
	echo "	sed -i \"s,%SYSCONFDIR%,\$(SYSCONFDIR),g\" $1" >> ./Makefile
	echo "	sed -i \"s,%LOCALSTATEDIR%,\$(LOCALSTATEDIR),g\" $1" >> ./Makefile

	echo "	sed -i \"s,%MODULESDIR%,\$(MODULESDIR),g\" $1" >> ./Makefile
	echo "	sed -i \"s,%TESTSDIR%,\$(TESTSDIR),g\" $1" >> ./Makefile


	echo "	sed -i \"s,%CWD%,\$(PWD),g\" $1" >> ./Makefile

	echo "" >> ./Makefile
}

echo -n "Writing New Makefile..."
echo -n '' > ./Makefile

echo "
NAME			= gamesetup
VERSION			= 0.0.1
MODULES_SOURCE		= ./src/modules
LIB_SOURCE		= ./src/lib
BIN_SOURCE		= ./src/bin
TESTS_SOURCE		= ./src/tests
BUILD_DIR		= ./build
BASE_DIR		= \$(pwd)


## location settings
BASH 			= $BASH
PERL 			= $PERL
PYTHON 			= $PYTHON
JAVA 			= $JAVA
PREFIX			= $PREFIX
BINDIR			= \$(PREFIX)$BINDIR
SYSCONFDIR		= $SYSCONFDIR
LOCALSTATEDIR		= \$(PREFIX)/$LOCALSTATEDIR
SYSTEMDSERVICEDIR	= $SYSTEMDSERVICEDIR
LOCALPROGDIR		= $LOCALPROGDIR
MODULESDIR		= $MODULESDIR
TESTSDIR		= $TESTSDIR
PERLLIBDIR		= $PERLLIBDIR

all: clean mkbuild build_system

mkbuild: 
	mkdir -p \$(BUILD_DIR)
	cp -arf \$(BIN_SOURCE) \$(BUILD_DIR)/
	cp -arf \$(TESTS_SOURCE) \$(BUILD_DIR)/

build_system:
" >> ./Makefile



subs_strings '$(BUILD_DIR)/bin/hybridize'

echo "
test:
	rm -rf ./tmp
	./build/tests/test.pl
" >> ./Makefile

echo "
install:
	mkdir -p \$(DESTDIR)\$(BINDIR)/

	cp -prf \$(BUILD_DIR)/bin/hybridize \$(DESTDIR)\$(BINDIR)/

" >> ./Makefile


echo "
clean:
	rm -rf ./build
	rm -rf ./tmp
" >> ./Makefile

echo 'Success!'
